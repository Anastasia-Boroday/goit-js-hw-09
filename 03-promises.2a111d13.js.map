{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,EAAUC,SAASC,cAAc,SAiBvC,SAASC,EAAcC,EAAUC,GAa/B,OAZiB,IAAIC,SAAQ,SAACC,EAASC,GACrC,IAAMC,EAAgBC,KAAKC,SAAW,GAEpCC,YAAW,WACPH,EACJF,EAAQ,CAAEH,WAAUC,UAEpBG,EAAO,CAAEJ,WAAUC,S,GAEnBA,E,IAMN,SAASQ,EAAeC,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAClCU,EAAAjB,GAASkB,OAAOC,QAAQ,qBAAoCC,OAAfd,EAAS,QAAYc,OAANb,EAAM,OAClEc,QAAQC,IAAI,qBAAoCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAExD,SAASgB,EAAaP,G,IAAEV,EAAFU,EAAEV,SAAUC,EAAZS,EAAYT,MAChCU,EAAAjB,GAASkB,OAAOM,QAAQ,oBAAmCJ,OAAfd,EAAS,QAAYc,OAANb,EAAM,OACjEc,QAAQC,IAAI,oBAAmCF,OAAfd,EAAS,QAAYc,OAANb,EAAM,M,CAtCvDc,QAAQC,IAAIpB,GACZA,EAAQuB,iBAAiB,UAEzB,SAAyBC,GACvBA,EAAIC,iBAMJ,IALA,IAAgCC,EAAAF,EAAIG,cAAcC,SAA1CvB,EAAwBqB,EAAxBrB,MAAOwB,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACfC,EAAaC,OAAO3B,EAAM4B,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OAEzBG,EAAI,EAAGA,GAAKD,EAAaC,IAAK,CAErCjC,EAAciC,EADCL,EAAaG,GAAaE,EAAI,IACpBC,KAAKxB,GAAgByB,MAAMjB,E","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\n\nconst formRef = document.querySelector('.form');\nconsole.log(formRef);\nformRef.addEventListener('submit', getInfoFromForm);\n\nfunction getInfoFromForm(evt) {\n  evt.preventDefault();\n  const { delay, step, amount } = evt.currentTarget.elements;\n  const delayValue = Number(delay.value);\n  const stepValue = Number(step.value);\n  const amountValue = Number(amount.value);\n\n  for (let i = 0; i <= amountValue; i++) {\n    const delaym = delayValue + stepValue * (i - 1);\n    createPromise(i, delaym).then(promiseSuccess).catch(promiseError);\n  }\n  \n}\nfunction createPromise(position, delay) {\n    const promise= new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    \n      setTimeout(() => {\n      if (shouldResolve) {\n      resolve({ position, delay });\n    } else {\n      reject({ position, delay });\n    }\n    },delay);\n\n    })\n  return promise;\n}\n\nfunction promiseSuccess({ position, delay }) {\n  Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n  console.log(`Fulfilled promise ${position} in ${delay}ms`);\n}\nfunction promiseError({ position, delay }) {\n  Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n  console.log(`Rejected promise ${position} in ${delay}ms`);\n}\n\n\n\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$formRef","document","querySelector","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$ce04d3a99e08e73b$var$promiseSuccess","param","$parcel$interopDefault","Notify","success","concat","console","log","$ce04d3a99e08e73b$var$promiseError","failure","addEventListener","evt","preventDefault","_elements","currentTarget","elements","step","amount","delayValue","Number","value","stepValue","amountValue","i","then","catch"],"version":3,"file":"03-promises.2a111d13.js.map"}